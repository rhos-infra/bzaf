- name: Install pip using get-pip.py
  become: yes
  shell: |
      curl https://bootstrap.pypa.io/get-pip.py | {{ python_ver }}

- name: rhel7 env python3 prepare
  become: yes
  shell: |
        install_pyhton3() {
        sudo  yum groupinstall "Development tools" -y
        sudo yum-config-manager --enable rhelosp-rhel-*-server-opt |grep baseurl
        sudo yum install -y python3-devel
        sudo yum install -y zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel \
        readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel

        cd ~
        wget https://www.python.org/ftp/python/3.8.2/Python-3.8.2.tgz
        tar zxvf Python-3.8.2.tgz
        cd Python-3.8.2
        ./configure --prefix=$HOME/python-3.8.2
        make
        make install
        export PATH=$HOME/python-3.8.2/bin:$PATH
        };
        python3 -V || install_pyhton3

- name: Install required packages
  become: yes
  vars:
    required_packages: ['{{ python_ver }}-virtualenv', 'git', 'gcc', '{{ python_ver }}-devel', 'wget']
  yum:
      name: "{{ required_packages }}"
      state: present

- name: "Ensure {{ dir }} doesn't exist"
  file:
    path: "{{ dir }}"
    state: absent

- name: Clone Bzaf project
  git:
      repo: 'https://github.com/rhos-infra/bzaf.git'
      dest: "{{ dir }}"
  when: test.refsec == ''

- name: Checkout specific gerrit patch
  git:
    repo: 'https://github.com/rhos-infra/bzaf.git'
    dest: "{{ dir }}"
    refspec: "{{ test.refsec }}"
    version: 'FETCH_HEAD'
  when: test.refsec != ''

- name: output current gerrit patch
  shell: |
        git log -n 1
  register: git_log
  args:
    chdir: "{{ dir }}"

- debug: var=git_log.stdout_lines
  when: test.refsec != ''

- name: Create Virtualenv
  vars:
    packages: ['pip', 'setuptools', 'tox']
    venv: venv_test3
  block:
      - pip:
           virtualenv: "{{ venv }}"
           name: "{{ packages }}"
           state: latest
  rescue:
      - name:
        shell: |
         virtualenv -p python3 {{ venv }} || virtualenv -p \
         /home/stack/python-3.8.2/bin/python3 {{ venv }}

- name: Install Bzaf
  pip:
      chdir: "{{ dir }}"
      name: "."
      virtualenv: "{{ venv }}"
      editable: true

- name: line_in_file fix for bz1752148
  become: true
  lineinfile:
       path: /bin/tripleo-ansible-inventory
       regexp: '#!/usr/bin/python3 -s'
       line: '#!/usr/bin/python3'

- name: Create an overcloud inventory file
  shell: |
      source {{ ansible_env.HOME }}/stackrc
      tripleo-ansible-inventory --ansible_ssh_user heat-admin --static-yaml-inventory {{ dir }}/hosts.yaml

- name: Patch inventory file ^[A-Z] => ^[a-z]
  shell: |
      sed -i -e 's/\(^[A-Z]\)/\L\1/' {{ dir }}/hosts.yaml

- name: install rpm_compare_util on the openstack_nodes
  become: true
  delegate_to: "{{item}}"
  template:
    src: templates/rpm_compare.j2
    dest: /usr/bin/rpm_compare
    owner: root
    group: root
    mode: '0755'
  loop: "{{groups['openstack_nodes']}}"

- name: install rpm_compare util on all overcloud containers osp>13
  become: true
  delegate_to: "{{item}}"
  ignore_errors: true
  shell: |
      podman -v && for i in `docker ps -q` ;do docker cp /usr/bin/rpm_compare $i:/tmp ;done
      podman -v && for i in `docker ps -q` ;do docker exec $i sh -c "cp -v /tmp/rpm_compare/rpm_compare /usr/bin/ ";done
  loop: "{{groups['overcloud_nodes']}}"

- name: install rpm_compare util on all overcloud containers osp<=13
  become: true
  delegate_to: "{{item}}"
  ignore_errors: true
  shell: |
    podman -v || for i in `docker ps -q` ;do docker exec -u root $i curl https://raw.githubusercontent.com/rhos-infra/bzaf/master/infrared/tasks/templates/rpm_compare.j2 -o /usr/bin/rpm_compare;docker exec -u root $i chmod +x /usr/bin/rpm_compare;done
  loop: "{{groups['overcloud_nodes']}}"
